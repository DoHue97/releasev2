{"version":3,"file":"static/js/804.a9a0cc9b.chunk.js","mappings":"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","sources":["pages/landing-page/LandingPageView.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Box, Button, Grid, MenuItem, Popover, Stack, Typography } from '@mui/material'\nimport { cache } from '../../utils/cache'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\nimport { config_path, portalCfg } from '../../router/config.path'\nimport PublicPage from '../PublicPage'\nimport Modal from '../../components/Modal';\nexport default function LandingPageView(props) {\n    const appConfig = cache.getAppConfig();\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    const {defaultLanguage, languages} = props;\n    const [anchorElLanguage, setAnchorElLanguage] = useState(null);\n\n    const handleOpenLanguages = (event) => {\n        setAnchorElLanguage(event.currentTarget);\n    };\n\n    const onChangeLanguage = async (item) => {\n        setAnchorElLanguage(null);\n        props.onChangeLanguage(item);\n    }\n\n    console.log(\"props.showRegisterAction:\",props.showRegisterAction);\n    return (\n        <PublicPage confirm={props.confirm}>\n            <Grid item xs={12} marginTop={2}>\n                <Typography variant='h5' textAlign={'center'} my={6}>{t('landing_welcome')} {appConfig.name}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid item xs={12} marginTop={10}>\n                    <Button size='large' id='landingPage/btnLogin' fullWidth variant='contained' onClick={() => navigate(config_path.login)}>{t('btn_login')}</Button>\n                </Grid>\n                <Grid item xs={12} marginTop={2}>\n                    <Button size='large' id='landingPage/btnRegister' fullWidth variant='outlined' onClick={() => props.setShowRegisterAction(true)}>{t('btn_register')}</Button>\n                </Grid>\n                {/* <Grid item xs={12} container justifyContent={'center'} marginTop={7}>\n                    <Typography variant='subtitle1'>{'© CRM.COM'}</Typography>\n                </Grid> */}\n            </Grid>\n            <Grid item xs={12} container sx={{\n                position: 'absolute',\n                bottom: 8,\n                width: 'calc(100% - 48px)',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }} >\n                <Button onClick={(e) => handleOpenLanguages(e)} size='large' id='header/changeLanguage'>\n                    {defaultLanguage ? defaultLanguage.label : \"\"}\n                </Button>\n                <Grid xs={12} item container justifyContent={'center'}>\n                    <Typography variant='subtitle1'>{'© CRM.COM'}</Typography>\n                </Grid>\n            </Grid>\n\n            <Popover id='list-languages'\n                anchorEl={anchorElLanguage}\n                open={Boolean(anchorElLanguage)}\n                onClose={() => setAnchorElLanguage(null)}\n                sx={{\n                    top: 45,\n                }}\n            >\n                {languages && languages.length > 0 && languages.map((item, index) => {\n                    return (\n                        <MenuItem key={index} onClick={() => onChangeLanguage(item)}>\n                            <Typography variant='subtitle2'>{item.label}</Typography>\n                        </MenuItem>\n                    )\n                })}\n            </Popover>\n            {props.showRegisterAction && <Modal\n                isOpen={props.showRegisterAction}\n                onClose={() => props.setShowRegisterAction(false)}\n            >\n                <Box>\n                    <Stack direction={'row'}>\n                        <Typography>{t('exits_rewards_participant')}</Typography>\n                    </Stack>\n                    <Stack marginTop={4} direction={'row'} justifyContent={'center'} alignItems={'center'}>\n                        <Stack flex={1} justifyContent={'center'} alignItems={'center'} spacing={2}>\n                            <img src={portalCfg.publicPath + '/assets/images/register_have_card.png'} alt={'Logo Image'} height={100} />\n                            <Button id='landingPage/btnRegisterHaveCard' onClick={() => navigate(config_path.register_existing_customer)} variant='contained'>{t('btn_register_have_card')}</Button>\n                        </Stack>\n                        <Stack flex={1} justifyContent={'center'} alignItems={'center'} spacing={2}>\n                            <img src={portalCfg.publicPath + '/assets/images/register_new.png'} alt={'Logo Image'} height={100} />\n                            <Button id='landingPage/btnRegisterNew' onClick={() => navigate(config_path.register)}  variant='contained'>{t('btn_register_new')}</Button>\n                        </Stack>\n                    </Stack>\n                </Box>\n            </Modal>}\n        </PublicPage>\n    )\n}\n"],"names":["LandingPageView","props","appConfig","cache","getAppConfig","t","useTranslation","navigate","useNavigate","defaultLanguage","languages","_useState","useState","_useState2","_slicedToArray","anchorElLanguage","setAnchorElLanguage","onChangeLanguage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","item","wrap","_context","prev","next","stop","_x","apply","arguments","console","log","showRegisterAction","_jsxs","PublicPage","confirm","children","_jsx","Grid","xs","marginTop","Typography","variant","textAlign","my","name","Button","size","id","fullWidth","onClick","config_path","login","setShowRegisterAction","container","sx","position","bottom","width","justifyContent","alignItems","e","currentTarget","label","Popover","anchorEl","open","Boolean","onClose","top","length","map","index","MenuItem","Modal","isOpen","Box","Stack","direction","flex","spacing","src","portalCfg","publicPath","alt","height","register_existing_customer","register"],"sourceRoot":""}