{"version":3,"file":"static/js/960.6b6b5cab.chunk.js","mappings":"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","sources":["pages/my-cards/MyCardsController.js","pages/my-cards/MyCardsView.js"],"sourcesContent":["import MyCardsView from './MyCardsView'\nimport crmservices from '../../wsclient';\nimport React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next';\nimport { config_path } from '../../router/config.path';\nimport { useNavigate } from 'react-router-dom';\nimport { custom_page } from '../../custom.config';\n\nconst MyCardsPage = custom_page.my_card && custom_page.my_card.view ? require('../../custom_src/pages/my-cards/MyCardsView').default : MyCardsView\n\nexport default function MyCardsController(props){\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const [cards, setCards] = useState(null);\n    const [showLoading, setShowLoading] = useState(false);\n    const [showProcessing, setShowProcessing] = useState(false);\n    const [message, setMessage] = useState(null);\n    const [isRefresh, setRefreshing] = useState(false);\n    const [showAddCardForm, setShowAddCardForm] = useState(false);\n\n    useEffect(() => {\n        getCards();\n    }, [])\n\n    const getCards = async (isRefresh) => {\n        // setShowProcessing(true);\n        setShowLoading(isRefresh ? false : true);\n        try {\n            var result = await crmservices.payment.getListPaymentMethods();\n            console.log(\"AAAA getCards result: \", result);\n            if (result.code == 'OK') {\n                setCards(result.data.content);\n            }\n        } catch (error) {\n            console.log(\"AAAA getCards exception:\", error);\n        }\n        setShowLoading(false);\n        // setShowProcessing(false);\n    }\n\n    const onRefresh = async () => {\n        setRefreshing(true);\n        await getCards(true);\n        setRefreshing(false);\n    }\n\n    const onSetPrimaryCard = async (card) => {\n        setShowProcessing(true);\n        try {\n            var result = await crmservices.payment.setPrimaryCard(card.id);\n            console.log(\"AAAA onSetPrimaryCard result: \", result);\n            if (result.code == 'OK') {\n                await getCards(true);\n                showMessage({ status: true, message: t('SET_PRIMARY_CARD_SUCCESS') });\n            } else {\n                showMessage({ status: true, message: t('EXCEPTION_PROCESS') });\n            }\n        } catch (error) {\n            showMessage({ status: true, message: t('EXCEPTION_PROCESS') });\n        }\n        setShowProcessing(false);\n    }\n\n    const onRemoveCard = async (card) => {\n        try {\n            setShowProcessing(true)\n            var result = await crmservices.payment.removePaymentMethod(card.id);\n            console.log('AAAA onRemoveCard result===', result);\n            if (result.code == 'OK') {\n                await getCards(true);\n                showMessage({status: true, message: t('REMOVE_CARD_SUCCESS')});\n            } else {\n                showMessage({status: true, message: t('FAILED_TO_REMOVE_CARD')});\n            }\n            \n        } catch (ex) {\n            console.log(\"remove card exception:\", ex);\n            showMessage({status: true, message: t('EXCEPTION_PROCESS')});\n        }\n        setShowProcessing(false);\n    }\n\n    const onShowAddCardForm = async () => {\n        console.log(\"cards:\",cards);\n        if (showAddCardForm) {\n            await getCards();\n            // setShowAddCardForm(!showAddCardForm);\n            // setShowProcessing(false);\n        // }else{\n        //     if(app_config.limitAllowCards!= undefined && cards.length >= app_config.limitAllowCards){\n        //         showMessage({status: true, message: t('MAXIMUM_CARD_EXCEPTION')});\n        //     }else{\n        //         setShowAddCardForm(!showAddCardForm);\n        //     }\n        }\n        setShowAddCardForm(!showAddCardForm);\n        // setShowProcessing(!showProcessing);\n    }\n\n    const onAddCardRewards = () => {\n        console.log(\"cards: \", cards);\n        // if(app_config.limitAllowCards!= undefined && cards.length >= app_config.limitAllowCards){\n        //     showMessage({status: true, title: strings.ERROR, message: strings.MAXIMUM_CARD_EXCEPTION});\n        // }else{\n        //     navigation.navigate(config_path.add_card_reward)\n        // }\n        navigate(config_path.add_card_reward)\n    }\n\n    const showMessage = ({ status, title, message, otherMessage, callBackFn }) => {\n        setShowProcessing(false);\n        setShowLoading(false);\n        setMessage({ show: status, title: title, content: message, otherMessage, callBackFn: callBackFn ? callBackFn : () => setMessage({}) });\n    }\n\n    return (\n        <MyCardsPage\n            open = {props.open}\n            onClose = {props.onClose}\n            cards = {cards}\n            showLoading={showLoading}\n            showProcessing={showProcessing}\n            message={message}\n            isRefresh={isRefresh}\n            showAddCardForm={showAddCardForm}\n            onRefresh={onRefresh}\n            onSetPrimaryCard={onSetPrimaryCard}\n            onRemoveCard={onRemoveCard}\n            onShowAddCardForm={onShowAddCardForm}\n            // onAddCardRewards={onAddCardRewards}\n        />\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { Box, CircularProgress, Grid, Typography, Stack, IconButton, useTheme, ListItem, Button, Chip} from '@mui/material'\nimport { useTranslation } from 'react-i18next'\nimport Container from '../../components/Container'\nimport SubHeader from '../../components/SubHeader'\nimport { cache } from '../../utils/cache'\nimport { DefaultCardIcon, DeleteIcon, MyCardMainIcon, RadioCheckedIcon, RadioIcon, RemoveIcon } from '../../components/IconComponent'\nimport AddCardController from './AddCardController'\nimport DrawerComponent from '../../components/Drawer'\nimport { custom_page } from '../../custom.config';\nimport { getCardIcon } from '../../utils/util'\n\nconst AddCardsPage = custom_page.add_card && custom_page.add_card.controller ? require('../../custom_src/pages/my-cards/AddCardController').default : AddCardController;\n\nexport default function MyCardsView(props){\n    const appConfig = cache.getAppConfig();\n    const { t } = useTranslation();\n    const { palette } = useTheme();\n    const { cards, } = props;\n    const [showRemoveCardOrder, setShowRemoveCardOrder] = useState(false);\n\n    let isRewards = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.reward && appConfig.features.contact.reward.is_supported ? appConfig.features.contact.reward.is_supported : false;\n    let isOrders = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.order && appConfig.features.contact.order.is_supported ? appConfig.features.contact.order.is_supported : false;\n    let return_cashback = appConfig && appConfig.features && appConfig.features.contact && appConfig.features.contact.reward && appConfig.features.contact.reward.return_cashback;\n    if (return_cashback) {\n        isRewards = true;\n    } else {\n        isRewards = false;\n    }\n    \n\n    return(\n        <>\n            <DrawerComponent title={t('my_cards')} isOpen={props.open} onClose={props.onClose} showProcessing={props.showProcessing} message={props.message}>\n                {isOrders && <Box>\n                    <Grid item direction={'row'} my={4} container xs={12}>\n                        <Grid item xs={12} container alignContent={'center'}>\n                            <Typography variant='h6'>{t('my_cards_orders')}</Typography>\n                        </Grid>\n                        <Grid item xs={12} container justifyContent={'flex-end'} alignContent={'center'}>\n                            <IconButton sx={{ background: 'transparent'}} onClick={()=>setShowRemoveCardOrder((prev)=>(!prev))}>\n                                {showRemoveCardOrder?<Typography>Done</Typography>:<DeleteIcon color=\"#8D3395\"/>}\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                    {props.showLoading && <Grid item justifyContent={'center'} container><CircularProgress marginTop={0.5} size={'1.75rem'} /></Grid> }\n                    {cards && cards.map((item, index)=>{\n                        let gatewayToken = item.card && item.card.gateway_token && item.card.gateway_token.length > 0 ? item.card.gateway_token[0] : null;\n                        if (gatewayToken && gatewayToken.gateway === 'JCC')\n                        return(\n                            <ListItem key={index} sx={{ borderBottom: index == cards.length - 1 ? 'none' : '1px solid', borderColor: '#f1f1f1'}}>\n                                <Grid item xs={12} direction={'row'} container >\n                                    <Grid item xs={10} container alignContent={'center'}>\n                                        {item.card && item.card.brand ? getCardIcon(item.card.brand) : <DefaultCardIcon />}\n                                        <Typography marginLeft={5} variant='h6' sx={{ display: 'flex', alignItems: 'center'}}>**** {item.card?item.card.last4:''} {item.is_primary && <Typography paddingLeft={1} variant='subtitle2' color={palette.success.main} component={'span'}>Primary</Typography>}</Typography>\n                                    </Grid>\n                                    <Grid item xs={2} container justifyContent={'flex-end'} alignContent={'center'}>\n                                        <IconButton sx={{background:'transparent'}} disabled={!showRemoveCardOrder && item.is_primary}\n                                            onClick={showRemoveCardOrder ? () => props.onRemoveCard(item) : () => props.onSetPrimaryCard(item)}\n                                        >\n                                            {showRemoveCardOrder ? <RemoveIcon color={palette.error.main}/> : (item.is_primary ? <RadioCheckedIcon /> : <RadioIcon />)}\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </ListItem>\n                        )\n                    })}\n                    <Button id='myCards/btnAddACardOrder' variant='contained' fullWidth='true' sx={{marginTop:4, borderRadius: 4}} onClick={props.onShowAddCardForm}>{t('add_a_card')}</Button>\n                </Box>}\n\n                {isRewards && <Box>\n                    <Grid item direction={'row'} my={4} container xs={12}>\n                        <Grid item xs={12} container alignContent={'center'}>\n                            <Typography variant='h6'>{t('my_cards_rewards')}</Typography>\n                        </Grid>\n                        <Grid item xs={12} container justifyContent={'flex-end'} alignContent={'center'}>\n                            <IconButton sx={{ background: 'transparent'}} onClick={()=>setShowRemoveCardOrder((prev)=>(!prev))}>\n                                {showRemoveCardOrder?<Typography>Done</Typography>:<DeleteIcon color=\"#8D3395\"/>}\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                    {props.showLoading && <Grid item justifyContent={'center'} container><CircularProgress marginTop={0.5} size={'1.75rem'} /></Grid> }\n                    {cards && cards.map((item, index)=>{\n                        let gatewayToken = item.card && item.card.gateway_token && item.card.gateway_token.length > 0 ? item.card.gateway_token[0] : null;\n                        if (gatewayToken && gatewayToken.gateway === 'JCC_MERCHANT')\n                        return(\n                            <ListItem key={index} sx={{ borderBottom: index == cards.length - 1 ? 'none' : '1px solid', borderColor: '#f1f1f1'}}>\n                                <Grid item direction={'row'} container >\n                                    <Grid item xs={12} container alignContent={'center'}>\n                                        {item.card && item.card.brand ? getCardIcon(item.card.brand) : <DefaultCardIcon />}\n                                        <Typography marginLeft={5} variant='h6' sx={{ display: 'flex', alignItems: 'center'}}>**** {item.card?item.card.last4:''} {item.is_primary && <Typography paddingLeft={1} variant='subtitle2' color={palette.success.main} component={'span'}>Primary</Typography>}</Typography>\n                                    </Grid>\n                                    <Grid item xs={12} container justifyContent={'flex-end'} alignContent={'center'}>\n                                        <IconButton sx={{background:'transparent'}} disabled={!showRemoveCardOrder && item.is_primary}\n                                            onClick={showRemoveCardOrder ? () => props.onRemoveCard(item) : () => props.onSetPrimaryCard(item)}\n                                        >\n                                            {showRemoveCardOrder ? <RemoveIcon color={palette.error.main}/> : (item.is_primary ? <RadioCheckedIcon /> : <RadioIcon />)}\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </ListItem>\n                        )\n                    })}\n                    <Button id='myCards/btnAddACardReward' variant='contained' fullWidth={true} sx={{marginTop:4, borderRadius: 4}} onClick={props.onShowAddCardForm}>{t('add_a_card')}</Button>\n                </Box>}\n\n            </DrawerComponent>\n            \n            {props.showAddCardForm && <AddCardsPage \n                isOpen={props.showAddCardForm}\n                onClose={props.onShowAddCardForm}\n            />}\n            \n        </>\n    )\n}"],"names":["MyCardsPage","custom_page","my_card","view","require","MyCardsView","MyCardsController","props","t","useTranslation","_useState","useNavigate","useState","_useState2","_slicedToArray","cards","setCards","_useState3","_useState4","showLoading","setShowLoading","_useState5","_useState6","showProcessing","setShowProcessing","_useState7","_useState8","message","setMessage","_useState9","_useState10","isRefresh","setRefreshing","_useState11","_useState12","showAddCardForm","setShowAddCardForm","useEffect","getCards","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","crmservices","payment","getListPaymentMethods","sent","console","log","code","data","content","t0","stop","_x","apply","arguments","onRefresh","_ref2","_callee2","_context2","onSetPrimaryCard","_ref3","_callee3","card","_context3","setPrimaryCard","id","showMessage","status","_x2","onRemoveCard","_ref4","_callee4","_context4","removePaymentMethod","_x3","onShowAddCardForm","_ref5","_callee5","_context5","_ref6","title","otherMessage","callBackFn","show","_jsx","open","onClose","AddCardsPage","add_card","controller","AddCardController","appConfig","cache","getAppConfig","palette","useTheme","showRemoveCardOrder","setShowRemoveCardOrder","isRewards","features","contact","reward","is_supported","isOrders","order","return_cashback","_jsxs","_Fragment","children","DrawerComponent","isOpen","Box","Grid","item","direction","my","container","xs","alignContent","Typography","variant","justifyContent","IconButton","sx","background","onClick","DeleteIcon","color","CircularProgress","marginTop","size","map","index","gatewayToken","gateway_token","length","gateway","ListItem","borderBottom","borderColor","brand","getCardIcon","DefaultCardIcon","marginLeft","display","alignItems","last4","is_primary","paddingLeft","success","main","component","disabled","RemoveIcon","error","RadioCheckedIcon","RadioIcon","Button","fullWidth","borderRadius"],"sourceRoot":""}